{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1H_lDEpDQOw1qbNAALpf8Xtvr_IQ3Ynvc","authorship_tag":"ABX9TyOoiIGx7OyV8kxdXVbIZ/Wt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"7064599924b7490ca9d94bc2be961436":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_31fb9f96f004437e9638ad0be3297377","IPY_MODEL_30b46b8363774e0fb3cc078ede9aabfa","IPY_MODEL_dd447804de7648a586609ac62013356e"],"layout":"IPY_MODEL_1924380db4be4e799452bdfadf797dc6"}},"31fb9f96f004437e9638ad0be3297377":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2abf36c673e849f3b240debf6e4e1b18","placeholder":"​","style":"IPY_MODEL_0b9105deb4264a5d885776bd6553320a","value":"Downloading: 100%"}},"30b46b8363774e0fb3cc078ede9aabfa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7441ff48a8da49228e6d7b684547c5ed","max":629,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c0c648ec0b9d486fab5e42432a1712c4","value":629}},"dd447804de7648a586609ac62013356e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a880a8dacd1b4bd6b4570901836086bb","placeholder":"​","style":"IPY_MODEL_86a6cef6a98d46488dabb7fb1fe9045a","value":" 629/629 [00:00&lt;00:00, 23.1kB/s]"}},"1924380db4be4e799452bdfadf797dc6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2abf36c673e849f3b240debf6e4e1b18":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0b9105deb4264a5d885776bd6553320a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7441ff48a8da49228e6d7b684547c5ed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c0c648ec0b9d486fab5e42432a1712c4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a880a8dacd1b4bd6b4570901836086bb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86a6cef6a98d46488dabb7fb1fe9045a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"590a31999c90438c9e69cbbfcea2233d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d2556e64342b44de991fb879fcd6219c","IPY_MODEL_99c14f53742e49c785fe875277ae23ab","IPY_MODEL_f83625ef04c5443db271a7174b5ae9dd"],"layout":"IPY_MODEL_8759efc4b83948bcb23f7621343f4f34"}},"d2556e64342b44de991fb879fcd6219c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d9d91f4944044aba878b42279d3b2b97","placeholder":"​","style":"IPY_MODEL_b70a9ec678594bbd9cd5ed2fda1d030f","value":"Downloading: 100%"}},"99c14f53742e49c785fe875277ae23ab":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4bffce8254454032b6bf03721470c548","max":267844284,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a353160f508548b6a3325d45e2f54fdd","value":267844284}},"f83625ef04c5443db271a7174b5ae9dd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0dd28c9863f44c20a51cfef37c08adb1","placeholder":"​","style":"IPY_MODEL_2ae91f43a6ba4da9b28464591b4c3a12","value":" 268M/268M [00:04&lt;00:00, 70.3MB/s]"}},"8759efc4b83948bcb23f7621343f4f34":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d9d91f4944044aba878b42279d3b2b97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b70a9ec678594bbd9cd5ed2fda1d030f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4bffce8254454032b6bf03721470c548":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a353160f508548b6a3325d45e2f54fdd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0dd28c9863f44c20a51cfef37c08adb1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2ae91f43a6ba4da9b28464591b4c3a12":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"78ca6c3562ba4a92a2927e006c70d06b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3d241069d94f4cc3a4ace9f86784a64c","IPY_MODEL_662056c4703645f9908791f663af0b6f","IPY_MODEL_bbe7bbeec2e54a4ab36a959d24bc4ee7"],"layout":"IPY_MODEL_df0f95bd67274a8abf6df03c26d1b4f7"}},"3d241069d94f4cc3a4ace9f86784a64c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1d0d9cc3704c418693ed87f57be340c2","placeholder":"​","style":"IPY_MODEL_ac43b2a76ccb4dc2955fa4f8ceb4f62d","value":"Downloading: 100%"}},"662056c4703645f9908791f663af0b6f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_de40d6a274654e0087596a94b141d839","max":48,"min":0,"orientation":"horizontal","style":"IPY_MODEL_33ee9b5c41084222b4af3478c6a1bb88","value":48}},"bbe7bbeec2e54a4ab36a959d24bc4ee7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2e8212600eda43aaa01cde98bc866b0b","placeholder":"​","style":"IPY_MODEL_36f6ff0085a449bb8f40380399b81bbb","value":" 48.0/48.0 [00:00&lt;00:00, 644B/s]"}},"df0f95bd67274a8abf6df03c26d1b4f7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1d0d9cc3704c418693ed87f57be340c2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ac43b2a76ccb4dc2955fa4f8ceb4f62d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"de40d6a274654e0087596a94b141d839":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"33ee9b5c41084222b4af3478c6a1bb88":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2e8212600eda43aaa01cde98bc866b0b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"36f6ff0085a449bb8f40380399b81bbb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"98f6605e3dc64a1f9f891c5ed8a53972":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d808a9fcd39549169d33668258f5d4d2","IPY_MODEL_1a332fe627f1408885694bc84077e51e","IPY_MODEL_a5177e1b459c42bb81703e8009457192"],"layout":"IPY_MODEL_dfcef76abc2844ff9013e8ace449f51c"}},"d808a9fcd39549169d33668258f5d4d2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3c232f277d28441ca831f5923313e8ae","placeholder":"​","style":"IPY_MODEL_05049dc5417a47bdbc623d347e07f696","value":"Downloading: 100%"}},"1a332fe627f1408885694bc84077e51e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_42771455b0434f628f59eb6a3730f955","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d5fee0522cb44dafa3034104b0cf82b2","value":231508}},"a5177e1b459c42bb81703e8009457192":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6b1edeef02147f598353204d928553d","placeholder":"​","style":"IPY_MODEL_9c7108c7836845c7bbc154b707af0932","value":" 232k/232k [00:00&lt;00:00, 388kB/s]"}},"dfcef76abc2844ff9013e8ace449f51c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3c232f277d28441ca831f5923313e8ae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"05049dc5417a47bdbc623d347e07f696":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"42771455b0434f628f59eb6a3730f955":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d5fee0522cb44dafa3034104b0cf82b2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c6b1edeef02147f598353204d928553d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9c7108c7836845c7bbc154b707af0932":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["\n","\n","#  Lib installation \n"],"metadata":{"id":"IFvT470NvqWa"}},{"cell_type":"code","source":["pip install gensim\n"],"metadata":{"id":"-W6C1CgPC4C0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install demoji"],"metadata":{"id":"Zj_fZTLzG0p-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install emoji"],"metadata":{"id":"qCL8Ps2iZBCL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install pyLDAvis"],"metadata":{"id":"CQNTFNtc0X5s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install textblob"],"metadata":{"id":"lT2N9n028iH7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install spellchecker"],"metadata":{"id":"ZZDIGZ8R8vpT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install spellchecker"],"metadata":{"id":"9e3DrKqvFj7e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install pyspellchecker==0.5.6"],"metadata":{"id":"_VcWt6Bx37hZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install transformers"],"metadata":{"id":"wtRPY7JHLdZL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import nltk; \n","nltk.download('stopwords')\n","nltk.download('punkt')\n","import re\n","import numpy as np\n","import pandas as pd\n","from pprint import pprint\n","# Gensim\n","import gensim\n","import gensim.corpora as corpora\n","from gensim.utils import simple_preprocess\n","from gensim.models import CoherenceModel\n","# spacy for lemmatization\n","import spacy\n","# Plotting tools\n","import pyLDAvis\n","import pyLDAvis.gensim_models\n","import matplotlib.pyplot as plt\n","from textblob import TextBlob\n","from textblob import Word\n","from nltk.tokenize import word_tokenize\n","# %matplotlib inline\n","import emoji\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","\n","# import textblob\n","# from spellchecker import SpellChecker\n","\n","# Enable logging for gensim - optional\n","import logging\n","logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.ERROR)\n","import warnings\n","warnings.filterwarnings(\"ignore\",category=DeprecationWarning)\n","from transformers import pipeline\n","import re\n","import emoji\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt # for data visualization purposes\n","import seaborn as sns # for statistical data visualization\n","%matplotlib inline\n","\n","from sklearn.naive_bayes import GaussianNB\n","\n","from sklearn.metrics import confusion_matrix"],"metadata":{"id":"iXcV8wyFwyPE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Imported Libraries\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.manifold import TSNE\n","from sklearn.decomposition import PCA, TruncatedSVD\n","import matplotlib.patches as mpatches\n","import time\n","\n","# Classifier Libraries\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","import collections\n","\n","\n","# Other Libraries\n","from sklearn.model_selection import train_test_split\n","from sklearn.pipeline import make_pipeline\n","from imblearn.pipeline import make_pipeline as imbalanced_make_pipeline\n","from imblearn.over_sampling import SMOTE\n","from imblearn.under_sampling import NearMiss\n","from imblearn.metrics import classification_report_imbalanced\n","from sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score, accuracy_score, classification_report\n","from collections import Counter\n","from sklearn.model_selection import KFold, StratifiedKFold\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"26MZueqzP6EJ","executionInfo":{"status":"ok","timestamp":1674571659282,"user_tz":-60,"elapsed":514,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["!python3 -m spacy download en"],"metadata":{"id":"5aryMaXnCetF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["spacy.load('en_core_web_sm')"],"metadata":{"id":"TYBm6omcIFRe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Descriptive statistics\n"],"metadata":{"id":"WnL3Zru8RXVW"}},{"cell_type":"code","source":["url = '/content/drive/MyDrive/Data_Science /NLP_Beginning/english_comments_uklon_1.csv'\n","df = pd.read_csv(url)\n","df.head(1)"],"metadata":{"id":"LuwDc9sgvwWF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.columns\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nRzN6b2oxC4u","executionInfo":{"status":"ok","timestamp":1674570593154,"user_tz":-60,"elapsed":12,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"52ede1c0-d2ce-4b68-dbb8-6b0fd5bfbd5f"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['order_id', 'feedback_id', 'rider_id', 'driver_id', 'created_at',\n","       'region_id', 'mark', 'custom_comment', 'critical'],\n","      dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# Visualization\n","# Pieplot by rating"],"metadata":{"id":"nhLOrQIUxUsa","executionInfo":{"status":"ok","timestamp":1674570593155,"user_tz":-60,"elapsed":9,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["label=['1', '2','3', '4', '5']\n","plt.pie(df.groupby('mark')['mark'].count(),autopct=\"%.1f%%\",labels=label)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"fr1YbTIPxY-4","executionInfo":{"status":"ok","timestamp":1674570593155,"user_tz":-60,"elapsed":9,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"7f7708c4-23c7-405c-8695-a9bf80a726c2"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 59.2% of feedback have low marks (1-2)"],"metadata":{"id":"xJ6JGPj6xp28","executionInfo":{"status":"ok","timestamp":1674570593156,"user_tz":-60,"elapsed":9,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["# TODO region and average mark\n","sns.set_theme(style=\"ticks\", palette=\"pastel\")\n","\n","# Load the example tips dataset\n","tips = sns.load_dataset(\"tips\")\n","\n","# Draw a nested boxplot to show bills by day and time\n","sns.boxplot(x=\"region_id\", y=\"mark\",\n","                         data=df)\n","sns.despine(offset=10, trim=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"pNrvmvDQy1D5","executionInfo":{"status":"ok","timestamp":1674570595257,"user_tz":-60,"elapsed":2109,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"eedd2ec6-00b4-40fc-f135-76d0af697e62"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.groupby('region_id').agg(median=('mark','median'),\n","                            mean=('mark','mean'),\n","                       count=('mark','count')).reset_index().sort_values('median')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"lvoNdQy-0jQT","executionInfo":{"status":"ok","timestamp":1674570595258,"user_tz":-60,"elapsed":12,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"aec517f4-b117-4bbf-d4cd-95c40ad750f5"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    region_id  median      mean  count\n","13         14     1.0  2.333333     15\n","18         19     1.0  2.333333    330\n","2           3     1.0  1.922053    526\n","3           4     1.0  2.220930    344\n","15         16     1.0  2.333333     30\n","5           6     1.0  1.947977    173\n","14         15     1.0  2.344828     29\n","9          10     1.0  2.250000     16\n","12         13     2.0  2.443038     79\n","11         12     2.0  2.468966    145\n","0           1     2.0  2.500708   2826\n","6           7     2.0  2.754386    114\n","4           5     2.0  2.660377    424\n","1           2     2.0  2.500000    262\n","10         11     2.0  2.559633    109\n","8           9     3.0  2.777778     27\n","7           8     3.0  3.285714      7\n","24         25     3.0  3.250000     12\n","25         26     4.0  3.666667     12\n","16         17     4.0  3.444444      9\n","20         21     4.0  3.263158     38\n","23         24     5.0  3.722222     18\n","19         20     5.0  4.500000      6\n","21         22     5.0  3.571429      7\n","17         18     5.0  3.755556     45\n","26         28     5.0  5.000000      2\n","22         23     5.0  3.727273     11\n","27        100     5.0  3.447368     38"],"text/html":["\n","  <div id=\"df-e1db9adb-41c9-4722-ac82-d4885f64d474\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>region_id</th>\n","      <th>median</th>\n","      <th>mean</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>1.0</td>\n","      <td>2.333333</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>1.0</td>\n","      <td>2.333333</td>\n","      <td>330</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>1.922053</td>\n","      <td>526</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>2.220930</td>\n","      <td>344</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>1.0</td>\n","      <td>2.333333</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>1.947977</td>\n","      <td>173</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>1.0</td>\n","      <td>2.344828</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1.0</td>\n","      <td>2.250000</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>2.0</td>\n","      <td>2.443038</td>\n","      <td>79</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>2.0</td>\n","      <td>2.468966</td>\n","      <td>145</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2.0</td>\n","      <td>2.500708</td>\n","      <td>2826</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>2.0</td>\n","      <td>2.754386</td>\n","      <td>114</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2.0</td>\n","      <td>2.660377</td>\n","      <td>424</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>2.500000</td>\n","      <td>262</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>2.0</td>\n","      <td>2.559633</td>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>3.0</td>\n","      <td>2.777778</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>3.0</td>\n","      <td>3.285714</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>25</td>\n","      <td>3.0</td>\n","      <td>3.250000</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>26</td>\n","      <td>4.0</td>\n","      <td>3.666667</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>4.0</td>\n","      <td>3.444444</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>4.0</td>\n","      <td>3.263158</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>24</td>\n","      <td>5.0</td>\n","      <td>3.722222</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>5.0</td>\n","      <td>4.500000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>22</td>\n","      <td>5.0</td>\n","      <td>3.571429</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>5.0</td>\n","      <td>3.755556</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>28</td>\n","      <td>5.0</td>\n","      <td>5.000000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>23</td>\n","      <td>5.0</td>\n","      <td>3.727273</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>100</td>\n","      <td>5.0</td>\n","      <td>3.447368</td>\n","      <td>38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1db9adb-41c9-4722-ac82-d4885f64d474')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e1db9adb-41c9-4722-ac82-d4885f64d474 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e1db9adb-41c9-4722-ac82-d4885f64d474');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["# !pip install -q transformers"],"metadata":{"id":"tO5jfsdb1CDO","executionInfo":{"status":"ok","timestamp":1674570599662,"user_tz":-60,"elapsed":4414,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["df.custom_comment.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LQoxFHSvTGnJ","executionInfo":{"status":"ok","timestamp":1674570600519,"user_tz":-60,"elapsed":862,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"60c40fa6-264a-44f9-afa5-68c44a2e8ed9"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    We had 7days small baby and a 2 year old with ...\n","1             Driver came to pick me up in wrong place\n","2                           Advertising other services\n","3                              Driver is a stupid dick\n","4     he was a rude driver, also cheating for the road\n","5                         took me to wrong place :((((\n","6                                  speaks good English\n","7    Dirty car, another number plate, driver is dif...\n","8                               He go with girl friend\n","9    He insults and says that I am Latino, surely y...\n","Name: custom_comment, dtype: object"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## Sentiment analysis"],"metadata":{"id":"KhYvGNf1NSzg"}},{"cell_type":"code","source":["# Using pipeline class to make predictions from models available in the Hub in an easy way \n","# from transformers import pipeline\n","sentiment_pipeline = pipeline(\"sentiment-analysis\")\n","url = '/content/drive/MyDrive/Data_Science /NLP_Beginning/english_comments_uklon.csv'\n","df = pd.read_csv(url)\n","\n","data = df.custom_comment.to_list()\n","sentiment_list = sentiment_pipeline(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181,"referenced_widgets":["7064599924b7490ca9d94bc2be961436","31fb9f96f004437e9638ad0be3297377","30b46b8363774e0fb3cc078ede9aabfa","dd447804de7648a586609ac62013356e","1924380db4be4e799452bdfadf797dc6","2abf36c673e849f3b240debf6e4e1b18","0b9105deb4264a5d885776bd6553320a","7441ff48a8da49228e6d7b684547c5ed","c0c648ec0b9d486fab5e42432a1712c4","a880a8dacd1b4bd6b4570901836086bb","86a6cef6a98d46488dabb7fb1fe9045a","590a31999c90438c9e69cbbfcea2233d","d2556e64342b44de991fb879fcd6219c","99c14f53742e49c785fe875277ae23ab","f83625ef04c5443db271a7174b5ae9dd","8759efc4b83948bcb23f7621343f4f34","d9d91f4944044aba878b42279d3b2b97","b70a9ec678594bbd9cd5ed2fda1d030f","4bffce8254454032b6bf03721470c548","a353160f508548b6a3325d45e2f54fdd","0dd28c9863f44c20a51cfef37c08adb1","2ae91f43a6ba4da9b28464591b4c3a12","78ca6c3562ba4a92a2927e006c70d06b","3d241069d94f4cc3a4ace9f86784a64c","662056c4703645f9908791f663af0b6f","bbe7bbeec2e54a4ab36a959d24bc4ee7","df0f95bd67274a8abf6df03c26d1b4f7","1d0d9cc3704c418693ed87f57be340c2","ac43b2a76ccb4dc2955fa4f8ceb4f62d","de40d6a274654e0087596a94b141d839","33ee9b5c41084222b4af3478c6a1bb88","2e8212600eda43aaa01cde98bc866b0b","36f6ff0085a449bb8f40380399b81bbb","98f6605e3dc64a1f9f891c5ed8a53972","d808a9fcd39549169d33668258f5d4d2","1a332fe627f1408885694bc84077e51e","a5177e1b459c42bb81703e8009457192","dfcef76abc2844ff9013e8ace449f51c","3c232f277d28441ca831f5923313e8ae","05049dc5417a47bdbc623d347e07f696","42771455b0434f628f59eb6a3730f955","d5fee0522cb44dafa3034104b0cf82b2","c6b1edeef02147f598353204d928553d","9c7108c7836845c7bbc154b707af0932"]},"id":"820ReOzIBfD1","executionInfo":{"status":"ok","timestamp":1674570943631,"user_tz":-60,"elapsed":343116,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"c123d32c-5c9f-413a-8ae4-9775bfc47f6b"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["No model was supplied, defaulted to distilbert-base-uncased-finetuned-sst-2-english and revision af0f99b (https://huggingface.co/distilbert-base-uncased-finetuned-sst-2-english).\n","Using a pipeline without specifying a model name and revision in production is not recommended.\n"]},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/629 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7064599924b7490ca9d94bc2be961436"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"590a31999c90438c9e69cbbfcea2233d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/48.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"78ca6c3562ba4a92a2927e006c70d06b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"98f6605e3dc64a1f9f891c5ed8a53972"}},"metadata":{}}]},{"cell_type":"code","source":["# create column with result of sentiment analysis is_negative \n","df['is_negative'] = [x['label']=='NEGATIVE' for x in sentiment_list]\n"],"metadata":{"id":"3eblyAafUB2y","executionInfo":{"status":"ok","timestamp":1674570943632,"user_tz":-60,"elapsed":25,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["# Data Preprocessing\n","\n"],"metadata":{"id":"BJp0G6_VBf1o"}},{"cell_type":"code","source":["# Topic modeling for negative  marks \n","# or sentiment analysis defined it like negative\n","df = df[(df.mark==1) | (df.mark==2) | (df.mark==3) | (df['is_negative'])]\n"],"metadata":{"id":"r3aPt-xFMFNO","executionInfo":{"status":"ok","timestamp":1674570943632,"user_tz":-60,"elapsed":24,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["df['advertising_other_services'] =  df.custom_comment.apply(lambda x: 1 if x.find('Advertising other services') != -1 else 0 )"],"metadata":{"id":"S2lTCwE3miuW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674570943632,"user_tz":-60,"elapsed":23,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"bc50c27d-f5ec-4a9f-9d86-a10f7ef61a47"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-36-43f8ffc2b068>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['advertising_other_services'] =  df.custom_comment.apply(lambda x: 1 if x.find('Advertising other services') != -1 else 0 )\n"]}]},{"cell_type":"code","source":["df['custom_comment'] = df['custom_comment'].apply(lambda x : x.replace('Advertising other services', ''))"],"metadata":{"id":"0M1R4Gr-agMd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674570943633,"user_tz":-60,"elapsed":23,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"a9f7d873-a737-4293-fd93-854f2e5f6110"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-37-7655cfa5ba22>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['custom_comment'] = df['custom_comment'].apply(lambda x : x.replace('Advertising other services', ''))\n"]}]},{"cell_type":"code","source":["df.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QUNlTuHX2tLm","executionInfo":{"status":"ok","timestamp":1674570943633,"user_tz":-60,"elapsed":19,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"7a50bedc-fc78-47e9-df0b-8ec2e5e6a45b"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                      4359\n","feedback_id                   4359\n","rider_id                      4359\n","driver_id                     4359\n","created_at                    4359\n","region_id                     4359\n","mark                          4359\n","custom_comment                4359\n","critical                       393\n","price                           13\n","emotional                        1\n","Unnamed: 11                      1\n","is_negative                   4359\n","advertising_other_services    4359\n","dtype: int64"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# drop empty feedbacks\n","df['lenth'] = df['custom_comment'].apply(lambda x: len(x))\n","df_zero = df[df.lenth == 0]\n","df = df[df.lenth != 0]\n","df.count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"boR5FQ0lrkF3","executionInfo":{"status":"ok","timestamp":1674570943634,"user_tz":-60,"elapsed":17,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"b13700e7-de34-4fef-cca5-4dbf9b27963a"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                      4021\n","feedback_id                   4021\n","rider_id                      4021\n","driver_id                     4021\n","created_at                    4021\n","region_id                     4021\n","mark                          4021\n","custom_comment                4021\n","critical                       207\n","price                           13\n","emotional                        1\n","Unnamed: 11                      1\n","is_negative                   4021\n","advertising_other_services    4021\n","lenth                         4021\n","dtype: int64"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# NLTK Stop words\n","from nltk.corpus import stopwords\n","stop_words = stopwords.words('english')\n","stop_words.extend(['driver', 'car', 'almost', 'also','muthafucker', 'really', 'fuck', 'fck'])\n","# df[]"],"metadata":{"id":"kyNoUZ81BpEq","executionInfo":{"status":"ok","timestamp":1674570943634,"user_tz":-60,"elapsed":14,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df['emoji'] = df.custom_comment.apply(lambda x: emoji.emoji_list(x)).apply(lambda x: x if len(x)!=0 else 0)\n","df[df.emoji != 0]['custom_comment'].head(3)"],"metadata":{"id":"uYaBVWtV3g0y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674570943635,"user_tz":-60,"elapsed":14,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"9d17d349-78b1-4882-e076-13e55430122d"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["130                                                    🥲\n","147                            a little too much talk 🤏🏻\n","468    No taxi came he just went himself and complete...\n","Name: custom_comment, dtype: object"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df['custom_comment'] = df.custom_comment.apply(lambda x: emoji.demojize(x))"],"metadata":{"id":"3-ZjV0IWHukZ","executionInfo":{"status":"ok","timestamp":1674570943637,"user_tz":-60,"elapsed":13,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["# Words spell checking with a TextBlob\n","def word_spell_correction(df):\n","  return [Word(word.lower()).correct() for word in word_tokenize(df)]\n","  \n","df['custom_comment_corrected'] = df['custom_comment'].apply(lambda x: ' '.join(word_spell_correction(x)))"],"metadata":{"id":"6zd0AyPh3r9t","executionInfo":{"status":"ok","timestamp":1674571315039,"user_tz":-60,"elapsed":371415,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["data = df"],"metadata":{"id":"OwvkIpB2Q5mf","executionInfo":{"status":"ok","timestamp":1674571315039,"user_tz":-60,"elapsed":26,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["df, test = train_test_split(df,  test_size=0.2, random_state=42)"],"metadata":{"id":"txxuIy5FAVoU","executionInfo":{"status":"ok","timestamp":1674571315040,"user_tz":-60,"elapsed":13,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["def sent_to_words(sentences):\n","    for sentence in sentences:       \n","        yield(gensim.utils.simple_preprocess(str(sentence), deacc=True))  # deacc=True removes punctuations\n","\n","# data_words = list(sent_to_words(df.custom_comment))\n","data_words = list(sent_to_words(df.custom_comment_corrected))\n","\n","\n","# print(data_words[75])"],"metadata":{"id":"8rS43SAVHIAc","executionInfo":{"status":"ok","timestamp":1674571315040,"user_tz":-60,"elapsed":13,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["df['list_of_words'] = list(sent_to_words(df.custom_comment_corrected))\n","df.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":214},"id":"QgPz5pIPHwky","executionInfo":{"status":"ok","timestamp":1674571315041,"user_tz":-60,"elapsed":13,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"1c10fb5c-89df-47d7-e8bb-91195f017109"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  order_id  \\\n","3735  a815ac98-de97-48f8-b861-9639af54e452   \n","\n","                               feedback_id  \\\n","3735  e6f68fd4-5969-4136-81d5-7f3bbbdeca2d   \n","\n","                                  rider_id  \\\n","3735  d16ec352-1efd-46df-9880-90929941934f   \n","\n","                                 driver_id       created_at  region_id  mark  \\\n","3735  aa7d6757-4bf7-4870-bf78-e19e2aa598d6  11/9/2021 14:08          6     1   \n","\n","           custom_comment  critical   price emotional  Unnamed: 11  \\\n","3735  Driver was arrogant        NaN    NaN       NaN          NaN   \n","\n","      is_negative  advertising_other_services  lenth emoji  \\\n","3735         True                           0     19     0   \n","\n","     custom_comment_corrected            list_of_words  \n","3735      driver was arrogant  [driver, was, arrogant]  "],"text/html":["\n","  <div id=\"df-75a2c7d3-968c-4540-aace-d6ce5efcafa1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>feedback_id</th>\n","      <th>rider_id</th>\n","      <th>driver_id</th>\n","      <th>created_at</th>\n","      <th>region_id</th>\n","      <th>mark</th>\n","      <th>custom_comment</th>\n","      <th>critical</th>\n","      <th>price</th>\n","      <th>emotional</th>\n","      <th>Unnamed: 11</th>\n","      <th>is_negative</th>\n","      <th>advertising_other_services</th>\n","      <th>lenth</th>\n","      <th>emoji</th>\n","      <th>custom_comment_corrected</th>\n","      <th>list_of_words</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3735</th>\n","      <td>a815ac98-de97-48f8-b861-9639af54e452</td>\n","      <td>e6f68fd4-5969-4136-81d5-7f3bbbdeca2d</td>\n","      <td>d16ec352-1efd-46df-9880-90929941934f</td>\n","      <td>aa7d6757-4bf7-4870-bf78-e19e2aa598d6</td>\n","      <td>11/9/2021 14:08</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Driver was arrogant</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>True</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>driver was arrogant</td>\n","      <td>[driver, was, arrogant]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75a2c7d3-968c-4540-aace-d6ce5efcafa1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-75a2c7d3-968c-4540-aace-d6ce5efcafa1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-75a2c7d3-968c-4540-aace-d6ce5efcafa1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["# Build the bigram and trigram models\n","bigram = gensim.models.Phrases(data_words, min_count=5, threshold=100) # higher threshold fewer phrases.\n","trigram = gensim.models.Phrases(bigram[data_words], threshold=100)  \n","\n","# Faster way to get a sentence clubbed as a trigram/bigram\n","bigram_mod = gensim.models.phrases.Phraser(bigram)\n","trigram_mod = gensim.models.phrases.Phraser(trigram)\n","\n","# See trigram example\n","# print(trigram_mod[bigram_mod[data_words[0]]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-jLQUCDPHmSl","executionInfo":{"status":"ok","timestamp":1674571315041,"user_tz":-60,"elapsed":12,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"0787286b-3133-46db-85f5-f228bb1621aa"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/gensim/models/phrases.py:598: UserWarning: For a faster implementation, use the gensim.models.phrases.Phraser class\n","  warnings.warn(\"For a faster implementation, use the gensim.models.phrases.Phraser class\")\n"]}]},{"cell_type":"code","source":["# Define functions for stopwords, bigrams, trigrams and lemmatization\n","def remove_stopwords(texts):\n","    return [[word for word in simple_preprocess(str(doc)) if word not in stop_words] for doc in texts]\n","def make_bigrams(texts):\n","    return [bigram_mod[doc] for doc in texts]\n","def make_trigrams(texts):\n","    return [trigram_mod[bigram_mod[doc]] for doc in texts]\n","def lemmatization(texts, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV']):\n","    \"\"\"https://spacy.io/api/annotation\"\"\"\n","    texts_out = []\n","    for sent in texts:\n","        doc = nlp(\" \".join(sent)) \n","        texts_out.append([token.lemma_ for token in doc if token.pos_ in allowed_postags])\n","    return texts_out"],"metadata":{"id":"D373c8ABH035","executionInfo":{"status":"ok","timestamp":1674571315041,"user_tz":-60,"elapsed":8,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["# Remove Stop Words\n","data_words_nostops = remove_stopwords(data_words)\n","# Form Bigrams\n","data_words_bigrams = make_trigrams(data_words_nostops)\n","# Initialize spacy 'en' model, keeping only tagger component (for efficiency)\n","# python3 -m spacy download en\n","# nlp = spacy.load('en', disable=['parser', 'ner'])\n","nlp = spacy.load(\"en_core_web_sm\") # TODO try medium and large \n","# Do lemmatization keeping only noun, adj, vb, adv\n","data_lemmatized = lemmatization(data_words_bigrams, allowed_postags=['NOUN', 'ADJ', 'VERB', 'ADV'])\n"],"metadata":{"id":"KAG2pufgH5cc","executionInfo":{"status":"ok","timestamp":1674571337239,"user_tz":-60,"elapsed":22205,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["#  train, test = train_test_split(data_lemmatized,  test_size=0.2, random_state=42)"],"metadata":{"id":"Q0SlytDnIg6q","executionInfo":{"status":"ok","timestamp":1674571337240,"user_tz":-60,"elapsed":6,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["# Двумя основными входными данными для тематической модели LDA являются4\n","# словарь (id2word) и корпус\n","\n","# Create Dictionary\n","id2word = corpora.Dictionary(data_lemmatized)\n","# Create Corpus\n","texts = data_lemmatized\n","# Term Document Frequency\n","corpus = [id2word.doc2bow(text) for text in texts]\n","# View\n","# print(corpus[1000])"],"metadata":{"id":"_-HBbrUaItaD","executionInfo":{"status":"ok","timestamp":1674571337240,"user_tz":-60,"elapsed":5,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["# Human readable format of corpus (term-frequency)\n","# [[(id2word[id], freq) for id, freq in cp] for cp in corpus[:3]]"],"metadata":{"id":"ycnmd_JdJGdA","executionInfo":{"status":"ok","timestamp":1674571337240,"user_tz":-60,"elapsed":4,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":53,"outputs":[]},{"cell_type":"markdown","source":["# Topic Modelling\n","### Latent Dirichlet Allocation (LDA)  with Gensim\n","\n"],"metadata":{"id":"vmBYYKGbA48c"}},{"cell_type":"code","source":["# Build LDA model\n","\n","lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus,\n","                                           id2word=id2word,\n","                                           num_topics=20, \n","                                           random_state=100,\n","                                           update_every=1,\n","                                           chunksize=600,\n","                                           passes=10,\n","                                           alpha=0.2,\n","                                          eta = 0.91,\n","                                           per_word_topics=True,\n","                                           minimum_phi_value = 0.2 )\n","\n","# 0.55\n","# lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus,\n","#                                            id2word=id2word,\n","#                                            num_topics=25, \n","#                                            random_state=100,\n","#                                            update_every=1,\n","#                                            chunksize=500,\n","#                                            passes=10,\n","#                                            alpha=0.9,\n","#                                           # eta = 0.1,\n","#                                            per_word_topics=True)"],"metadata":{"id":"EA6dp4EPA-Ed","executionInfo":{"status":"ok","timestamp":1674571343500,"user_tz":-60,"elapsed":6264,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["lda_model.print_topics()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fGTpbhc6JVsU","executionInfo":{"status":"ok","timestamp":1674571343501,"user_tz":-60,"elapsed":21,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"56c49e64-f1e4-4b16-f131-5984076b6523"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(0,\n","  '0.011*\"seat\" + 0.011*\"put\" + 0.008*\"behave\" + 0.008*\"front\" + 0.004*\"star\" + 0.004*\"belt\" + 0.002*\"box\" + 0.002*\"fasten\" + 0.002*\"back\" + 0.002*\"set\"'),\n"," (1,\n","  '0.094*\"drive\" + 0.029*\"road\" + 0.021*\"fast\" + 0.017*\"shout\" + 0.015*\"music\" + 0.010*\"safe\" + 0.009*\"loud\" + 0.007*\"dangerous\" + 0.007*\"miss\" + 0.007*\"know\"'),\n"," (2,\n","  '0.159*\"rude\" + 0.027*\"taxi\" + 0.016*\"much\" + 0.007*\"bit\" + 0.006*\"scream\" + 0.006*\"disrespectful\" + 0.004*\"keep\" + 0.003*\"little\" + 0.003*\"share\" + 0.002*\"inappropriate\"'),\n"," (3,\n","  '0.051*\"arrive\" + 0.041*\"idle\" + 0.039*\"late\" + 0.038*\"start\" + 0.029*\"wait\" + 0.027*\"time\" + 0.023*\"minute\" + 0.021*\"come\" + 0.017*\"even\" + 0.014*\"charge\"'),\n"," (4,\n","  '0.014*\"attitude\" + 0.011*\"speed\" + 0.008*\"poor\" + 0.004*\"city\" + 0.004*\"fraud\" + 0.002*\"limit\" + 0.002*\"high\" + 0.002*\"km\" + 0.002*\"nasty\" + 0.002*\"part\"'),\n"," (5,\n","  '0.048*\"phone\" + 0.041*\"driving\" + 0.035*\"use\" + 0.022*\"talk\" + 0.009*\"fight\" + 0.007*\"testing\" + 0.007*\"man\" + 0.005*\"reckless\" + 0.005*\"rough\" + 0.005*\"dangerous\"'),\n"," (6,\n","  '0.048*\"trip\" + 0.047*\"take\" + 0.042*\"money\" + 0.028*\"pay\" + 0.016*\"behavior\" + 0.015*\"ride\" + 0.014*\"ask\" + 0.014*\"order\" + 0.013*\"extra\" + 0.011*\"want\"'),\n"," (7,\n","  '0.034*\"time\" + 0.033*\"call\" + 0.017*\"speak\" + 0.011*\"customer\" + 0.008*\"russian\" + 0.005*\"arrival\" + 0.005*\"ukrainian\" + 0.005*\"waste\" + 0.004*\"lack\" + 0.003*\"answer\"'),\n"," (8,\n","  '0.077*\"address\" + 0.033*\"go\" + 0.027*\"wrong\" + 0.020*\"take\" + 0.019*\"need\" + 0.017*\"way\" + 0.015*\"right\" + 0.013*\"stop\" + 0.011*\"open\" + 0.010*\"say\"'),\n"," (9,\n","  '0.022*\"slow\" + 0.017*\"feel\" + 0.015*\"aggressive\" + 0.012*\"listen\" + 0.007*\"comfortable\" + 0.006*\"issue\" + 0.006*\"watch\" + 0.004*\"sit\" + 0.003*\"approach\" + 0.003*\"exhaust\"'),\n"," (10,\n","  '0.023*\"passenger\" + 0.019*\"driver\" + 0.013*\"polite\" + 0.011*\"yell\" + 0.011*\"think\" + 0.005*\"item\" + 0.005*\"comfort\" + 0.005*\"uncomfortable\" + 0.005*\"push\" + 0.003*\"sit\"'),\n"," (11,\n","  '0.019*\"ask\" + 0.017*\"cold\" + 0.013*\"entrance\" + 0.013*\"number\" + 0.007*\"stupid\" + 0.007*\"theater\" + 0.007*\"manner\" + 0.006*\"unpleasant\" + 0.005*\"thing\" + 0.005*\"call\"'),\n"," (12,\n","  '0.013*\"arrogant\" + 0.012*\"follow\" + 0.010*\"map\" + 0.006*\"side\" + 0.003*\"begin\" + 0.003*\"needless\" + 0.003*\"discussion\" + 0.003*\"earphone\" + 0.003*\"direction\" + 0.003*\"cheap\"'),\n"," (13,\n","  '0.016*\"help\" + 0.014*\"smoke\" + 0.013*\"bag\" + 0.012*\"client\" + 0.006*\"heavy\" + 0.006*\"carry\" + 0.005*\"swear\" + 0.004*\"luggage\" + 0.004*\"baggage\" + 0.003*\"girl\"'),\n"," (14,\n","  '0.015*\"well\" + 0.011*\"understand\" + 0.007*\"abusive\" + 0.004*\"throw\" + 0.003*\"respectful\" + 0.003*\"expel\" + 0.003*\"none\" + 0.002*\"drunk\" + 0.001*\"small\" + 0.001*\"great\"'),\n"," (15,\n","  '0.033*\"good\" + 0.026*\"racism\" + 0.019*\"mask\" + 0.013*\"service\" + 0.012*\"terrible\" + 0.011*\"dirty\" + 0.010*\"smoking\" + 0.008*\"cough\" + 0.008*\"professional\" + 0.007*\"see\"'),\n"," (16,\n","  '0.019*\"ride\" + 0.013*\"insult\" + 0.010*\"recommend\" + 0.008*\"mean\" + 0.004*\"general\" + 0.004*\"safety\" + 0.003*\"complete\" + 0.003*\"harass\" + 0.003*\"ban\" + 0.003*\"perennially\"'),\n"," (17,\n","  '0.121*\"bad\" + 0.026*\"route\" + 0.025*\"behaviour\" + 0.025*\"long\" + 0.011*\"navigation\" + 0.007*\"choose\" + 0.007*\"let\" + 0.006*\"traffic\" + 0.004*\"communication\" + 0.003*\"day\"'),\n"," (18,\n","  '0.047*\"wrong\" + 0.043*\"location\" + 0.040*\"drop\" + 0.035*\"change\" + 0.032*\"give\" + 0.030*\"pick\" + 0.028*\"place\" + 0.025*\"destination\" + 0.020*\"leave\" + 0.018*\"want\"'),\n"," (19,\n","  '0.031*\"smell\" + 0.012*\"person\" + 0.011*\"nice\" + 0.006*\"unfriendly\" + 0.004*\"cigarette\" + 0.004*\"seatbelt\" + 0.004*\"strong\" + 0.004*\"thumbs_up\" + 0.003*\"irritated\" + 0.003*\"patient\"')]"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["topic_names = {0:'car_broken',\n","               1:'driving_style',\n","               2:'aggresive_behaviour',\n","               3:'point_of_start',\n","               4:'speed_limit',\n","               5:'use_phone_while_driving',\n","               6:'extra_money_paid',\n","               7:'language_conflict',\n","               8:'not_optimal_way',\n","               9:'passanger_disagree',\n","               10:'aggresive_behaviour',\n","               11:'missundertanding',\n","               12: 'not_optimal_way',\n","               13: 'luggage_help',\n","               14: 'too aggresive behaviour',\n","               15: 'rasism_covid',\n","               16:'personal_safety',\n","               17: 'wrong_way',\n","               18: 'wrong_drop_location',\n","               19: 'dirty_car'\n","              } "],"metadata":{"id":"8VNt9Dgg7Qmk","executionInfo":{"status":"ok","timestamp":1674571343501,"user_tz":-60,"elapsed":17,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["# Compute Perplexity\n","print('\\nPerplexity: ', lda_model.log_perplexity(corpus))  # a measure of how good the model is. lower the better.\n","# Compute Coherence Score\n","coherence_model_lda = CoherenceModel(model=lda_model, texts=data_lemmatized, dictionary=id2word, coherence='c_v')\n","coherence_lda = coherence_model_lda.get_coherence()\n","print('\\nCoherence Score: ', coherence_lda)\n","\n","# Perplexity:  -7.502678731476726\n","\n","# Coherence Score:  0.5545030167477594"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7AVm0VnKJckA","executionInfo":{"status":"ok","timestamp":1674571345740,"user_tz":-60,"elapsed":2255,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"370ffa7c-1f09-46db-e95b-e0de4a8f346e"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Perplexity:  -7.463962285246751\n","\n","Coherence Score:  0.4733980120374617\n"]}]},{"cell_type":"code","source":["# # Visualize the topics\n","# pyLDAvis.enable_notebook()\n","# vis = pyLDAvis.gensim_models.prepare(lda_model, corpus, id2word)\n","# vis"],"metadata":{"id":"TWjoC3pqKK-a","executionInfo":{"status":"ok","timestamp":1674571345741,"user_tz":-60,"elapsed":5,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["sent_topics_df = pd.DataFrame()\n","for n in range(0,len(lda_model[corpus])):\n","  for i, row in enumerate(lda_model[corpus][n][2]):\n","    # print(len(row))\n","    # if len(lda_model[corpus][n][2])>2:\n","    #   i, b = row[0]\n","    # else:\n","    i, b = row\n","\n","    topic_number = b[0][0]\n","    prop_topic = b[0][1]\n","    # print(i, topic_number)\n","\n","    # print([i,topic_number,prop_topic ])\n","    sent_topics_df = sent_topics_df.append(pd.Series([int(i),topic_number, prop_topic]), ignore_index=True)\n","\n","    # for j, (topic_num, prop_topic) in row:\n","    #   sent_topics_df = sent_topics_df.append(pd.Series(j, [int(topic_num), prop_topic]), ignore_index=True)\n","\n"],"metadata":{"id":"FxTlDGMRzxPn","executionInfo":{"status":"ok","timestamp":1674571366649,"user_tz":-60,"elapsed":20912,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["sent_topics_df = sent_topics_df.rename(columns={0: \"index\", 1: \"topic_number\", 2:'prop_topic'})\n","sent_topics_df['index'] = sent_topics_df['index'].astype('int')\n","sent_topics_df = sent_topics_df.set_index('index')"],"metadata":{"id":"ZVM1oNGp6KZX","executionInfo":{"status":"ok","timestamp":1674571366649,"user_tz":-60,"elapsed":25,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["# sent_topics_df.head(1)'\n","empty = pd.DataFrame()\n","empty['list_of_words'] = data_words\n","\n","data_topic =  pd.merge(empty, sent_topics_df, left_index=True, right_index=True)\n","data_topic = data_topic.rename(columns={0: \"index\", 1: \"topic_number\", 2:'prop_topic'})\n","data_topic['list_of_words']= data_topic['list_of_words'].astype('str')\n","df['list_of_words']= df['list_of_words'].astype('str')"],"metadata":{"id":"db08lRWGORQq","executionInfo":{"status":"ok","timestamp":1674571366650,"user_tz":-60,"elapsed":25,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["input_var =  pd.merge(df, data_topic, on = 'list_of_words', how = 'inner')\n","# input_var = input_var.drop_duplicates(['order_id', 'list_of_words'])"],"metadata":{"id":"gMbBZ3OVBhoz","executionInfo":{"status":"ok","timestamp":1674571366650,"user_tz":-60,"elapsed":24,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["input_var['topic_title'] = input_var['topic_number'].apply(lambda x: topic_names[x])\n","# len(input_var)"],"metadata":{"id":"Z31IFiX4B5C4","executionInfo":{"status":"ok","timestamp":1674571366650,"user_tz":-60,"elapsed":24,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":63,"outputs":[]},{"cell_type":"markdown","source":["## Regression modeling"],"metadata":{"id":"7bpiUYQaOFR-"}},{"cell_type":"code","source":["input_var = pd.get_dummies(input_var, columns=['topic_title'])"],"metadata":{"id":"M27U9-uYOI1m","executionInfo":{"status":"ok","timestamp":1674571557495,"user_tz":-60,"elapsed":566,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["input_var = input_var.rename(columns = {'critical ':'critical'})"],"metadata":{"id":"k0KB_ZA1bCxu","executionInfo":{"status":"ok","timestamp":1674571558205,"user_tz":-60,"elapsed":2,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["input_var = input_var.drop_duplicates(['order_id', 'feedback_id', 'rider_id', 'driver_id', 'created_at',\n","       'region_id', 'mark', 'custom_comment', 'mark', 'topic_number'],keep='last')\n","len(input_var)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XJtr-WZSYbro","executionInfo":{"status":"ok","timestamp":1674571558744,"user_tz":-60,"elapsed":7,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"3f7c8768-5edf-4b21-fde6-be8d6f566c1f"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4117"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["input_var.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qIvh7maXdiEf","executionInfo":{"status":"ok","timestamp":1674571558744,"user_tz":-60,"elapsed":5,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"5beaeb90-9d8d-49f6-df55-cdf980c1f922"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['order_id', 'feedback_id', 'rider_id', 'driver_id', 'created_at',\n","       'region_id', 'mark', 'custom_comment', 'critical', 'price', 'emotional',\n","       'Unnamed: 11', 'is_negative', 'advertising_other_services', 'lenth',\n","       'emoji', 'custom_comment_corrected', 'list_of_words', 'topic_number',\n","       'prop_topic', 'topic_title_aggresive_behaviour',\n","       'topic_title_car_broken', 'topic_title_dirty_car',\n","       'topic_title_driving_style', 'topic_title_extra_money_paid',\n","       'topic_title_language_conflict', 'topic_title_luggage_help',\n","       'topic_title_missundertanding', 'topic_title_not_optimal_way',\n","       'topic_title_passanger_disagree', 'topic_title_personal_safety',\n","       'topic_title_point_of_start', 'topic_title_rasism_covid',\n","       'topic_title_speed_limit', 'topic_title_too aggresive behaviour',\n","       'topic_title_use_phone_while_driving',\n","       'topic_title_wrong_drop_location', 'topic_title_wrong_way'],\n","      dtype='object')"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["input_var['critical'] = input_var['critical'].replace(0.5,1)\n","input_var.groupby('critical').count()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"hEXaf9W1Tklp","executionInfo":{"status":"ok","timestamp":1674572707825,"user_tz":-60,"elapsed":6,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"10c0a013-127a-4a09-cdf7-623ac6deadbe"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          order_id  feedback_id  rider_id  driver_id  created_at  region_id  \\\n","critical                                                                      \n","0.0            142          142       142        142         142        142   \n","1.0             67           67        67         67          67         67   \n","\n","          mark  custom_comment  price  emotional  ...  \\\n","critical                                          ...   \n","0.0        142             142     13          0  ...   \n","1.0         67              67      1          0  ...   \n","\n","          topic_title_passanger_disagree  topic_title_personal_safety  \\\n","critical                                                                \n","0.0                                  142                          142   \n","1.0                                   67                           67   \n","\n","          topic_title_point_of_start  topic_title_rasism_covid  \\\n","critical                                                         \n","0.0                              142                       142   \n","1.0                               67                        67   \n","\n","          topic_title_speed_limit  topic_title_too aggresive behaviour  \\\n","critical                                                                 \n","0.0                           142                                  142   \n","1.0                            67                                   67   \n","\n","          topic_title_use_phone_while_driving  \\\n","critical                                        \n","0.0                                       142   \n","1.0                                        67   \n","\n","          topic_title_wrong_drop_location  topic_title_wrong_way  pred  \n","critical                                                                \n","0.0                                   142                    142   142  \n","1.0                                    67                     67    67  \n","\n","[2 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-1ea39e17-869f-4bfa-9930-bf9642bcadc2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>feedback_id</th>\n","      <th>rider_id</th>\n","      <th>driver_id</th>\n","      <th>created_at</th>\n","      <th>region_id</th>\n","      <th>mark</th>\n","      <th>custom_comment</th>\n","      <th>price</th>\n","      <th>emotional</th>\n","      <th>...</th>\n","      <th>topic_title_passanger_disagree</th>\n","      <th>topic_title_personal_safety</th>\n","      <th>topic_title_point_of_start</th>\n","      <th>topic_title_rasism_covid</th>\n","      <th>topic_title_speed_limit</th>\n","      <th>topic_title_too aggresive behaviour</th>\n","      <th>topic_title_use_phone_while_driving</th>\n","      <th>topic_title_wrong_drop_location</th>\n","      <th>topic_title_wrong_way</th>\n","      <th>pred</th>\n","    </tr>\n","    <tr>\n","      <th>critical</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.0</th>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","      <td>142</td>\n","    </tr>\n","    <tr>\n","      <th>1.0</th>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","      <td>67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2 rows × 38 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ea39e17-869f-4bfa-9930-bf9642bcadc2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1ea39e17-869f-4bfa-9930-bf9642bcadc2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1ea39e17-869f-4bfa-9930-bf9642bcadc2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["X = input_var[[ 'region_id', 'mark','is_negative', 'advertising_other_services', 'lenth',\n","       'topic_title_aggresive_behaviour',\n","       'topic_title_car_broken', 'topic_title_dirty_car',\n","       'topic_title_driving_style', 'topic_title_extra_money_paid',\n","       'topic_title_language_conflict', 'topic_title_luggage_help',\n","       'topic_title_missundertanding', 'topic_title_not_optimal_way',\n","       'topic_title_passanger_disagree', 'topic_title_personal_safety',\n","       'topic_title_point_of_start', 'topic_title_rasism_covid',\n","       'topic_title_speed_limit', 'topic_title_too aggresive behaviour',\n","       'topic_title_use_phone_while_driving',\n","       'topic_title_wrong_drop_location', 'topic_title_wrong_way']]\n","\n","y = input_var['critical'].fillna(0).replace(0.5,0)"],"metadata":{"id":"0hJ_R9KSboGZ","executionInfo":{"status":"ok","timestamp":1674572744877,"user_tz":-60,"elapsed":514,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["# train a Gaussian Naive Bayes classifier on the training set\n","# instantiate the model\n","gnb = GaussianNB()\n","gnb.fit(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"viN0J4K-fbAU","executionInfo":{"status":"ok","timestamp":1674572746702,"user_tz":-60,"elapsed":4,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"f1f7d9ff-9cd9-483a-9b82-e95f91ed879f"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["y_pred = gnb.predict(X)\n","input_var['pred'] = y_pred"],"metadata":{"id":"OMQg66Ddfbpb","executionInfo":{"status":"ok","timestamp":1674572748528,"user_tz":-60,"elapsed":6,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["input_var.head(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"voliFvS4ftOY","executionInfo":{"status":"ok","timestamp":1674572748529,"user_tz":-60,"elapsed":5,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"8a871a48-2581-4b1f-bc36-a345136a9dd4"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                order_id  \\\n","21  a815ac98-de97-48f8-b861-9639af54e452   \n","\n","                             feedback_id  \\\n","21  e6f68fd4-5969-4136-81d5-7f3bbbdeca2d   \n","\n","                                rider_id  \\\n","21  d16ec352-1efd-46df-9880-90929941934f   \n","\n","                               driver_id       created_at  region_id  mark  \\\n","21  aa7d6757-4bf7-4870-bf78-e19e2aa598d6  11/9/2021 14:08          6     1   \n","\n","         custom_comment  critical  price  ... topic_title_passanger_disagree  \\\n","21  Driver was arrogant       NaN    NaN  ...                              0   \n","\n","    topic_title_personal_safety  topic_title_point_of_start  \\\n","21                            0                           0   \n","\n","    topic_title_rasism_covid  topic_title_speed_limit  \\\n","21                         0                        0   \n","\n","   topic_title_too aggresive behaviour topic_title_use_phone_while_driving  \\\n","21                                   0                                   0   \n","\n","   topic_title_wrong_drop_location  topic_title_wrong_way  pred  \n","21                               0                      0   1.0  \n","\n","[1 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-b3b07751-e829-4b4d-bf61-40fae09f479e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>feedback_id</th>\n","      <th>rider_id</th>\n","      <th>driver_id</th>\n","      <th>created_at</th>\n","      <th>region_id</th>\n","      <th>mark</th>\n","      <th>custom_comment</th>\n","      <th>critical</th>\n","      <th>price</th>\n","      <th>...</th>\n","      <th>topic_title_passanger_disagree</th>\n","      <th>topic_title_personal_safety</th>\n","      <th>topic_title_point_of_start</th>\n","      <th>topic_title_rasism_covid</th>\n","      <th>topic_title_speed_limit</th>\n","      <th>topic_title_too aggresive behaviour</th>\n","      <th>topic_title_use_phone_while_driving</th>\n","      <th>topic_title_wrong_drop_location</th>\n","      <th>topic_title_wrong_way</th>\n","      <th>pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>a815ac98-de97-48f8-b861-9639af54e452</td>\n","      <td>e6f68fd4-5969-4136-81d5-7f3bbbdeca2d</td>\n","      <td>d16ec352-1efd-46df-9880-90929941934f</td>\n","      <td>aa7d6757-4bf7-4870-bf78-e19e2aa598d6</td>\n","      <td>11/9/2021 14:08</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Driver was arrogant</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows × 39 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3b07751-e829-4b4d-bf61-40fae09f479e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b3b07751-e829-4b4d-bf61-40fae09f479e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b3b07751-e829-4b4d-bf61-40fae09f479e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["# Print the Confusion Matrix and slice it into four pieces\n","# cm = confusion_matrix(y_test, y_pred)\n","cm = confusion_matrix(y, y_pred)\n","\n","\n","print('Confusion matrix\\n\\n', cm)\n","\n","print('\\nTrue Positives(TP) = ', cm[0,0])\n","\n","print('\\nTrue Negatives(TN) = ', cm[1,1])\n","\n","print('\\nFalse Positives(FP) = ', cm[0,1])\n","\n","print('\\nFalse Negatives(FN) = ', cm[1,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qBZOfqcYgrCm","executionInfo":{"status":"ok","timestamp":1674572752749,"user_tz":-60,"elapsed":4,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"363067d3-76e1-4bed-b329-a0bf2c183ba7"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix\n","\n"," [[1771 2279]\n"," [   0   67]]\n","\n","True Positives(TP) =  1771\n","\n","True Negatives(TN) =  67\n","\n","False Positives(FP) =  2279\n","\n","False Negatives(FN) =  0\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(y, y_pred))"],"metadata":{"id":"QWEU1gKng7G9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674572757870,"user_tz":-60,"elapsed":398,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"76327d10-b082-4d2f-bb0d-fc2105d99b44"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         0.0       1.00      0.44      0.61      4050\n","         1.0       0.03      1.00      0.06        67\n","\n","    accuracy                           0.45      4117\n","   macro avg       0.51      0.72      0.33      4117\n","weighted avg       0.98      0.45      0.60      4117\n","\n"]}]},{"cell_type":"code","source":["#Preparing the model\n","from sklearn.model_selection import train_test_split\n","# X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.20, random_state = 99)\n","from sklearn.linear_model import LogisticRegression\n","model = LogisticRegression()\n","# model.fit(X_train, y_train)\n","# model.score(X_test,y_test)\n","model.fit(X, y)\n","print(model.predict_proba(X)[0])\n","# model.score(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ymjOnPiof2b5","executionInfo":{"status":"ok","timestamp":1674572761878,"user_tz":-60,"elapsed":4,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"64155643-841e-4022-b654-90ec2a16acd3"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.98466087 0.01533913]\n"]}]},{"cell_type":"code","source":["# Let's implement simple classifiers\n","\n","classifiers = {\n","    \"LogisiticRegression\": LogisticRegression(),\n","    \"KNearest\": KNeighborsClassifier(),\n","    \"Support Vector Classifier\": SVC(),\n","    \"DecisionTreeClassifier\": DecisionTreeClassifier()\n","}"],"metadata":{"id":"1BHI-8ojgaQJ","executionInfo":{"status":"ok","timestamp":1674572768738,"user_tz":-60,"elapsed":515,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["# Wow our scores are getting even high scores even when applying cross validation.\n","from sklearn.model_selection import cross_val_score\n","\n","\n","for key, classifier in classifiers.items():\n","    # classifier.fit(X_train, y_train)\n","    # training_score = cross_val_score(classifier, X_train, y_train, cv=5)\n","    classifier.fit(X, y)\n","    training_score = cross_val_score(classifier, X, y, cv=5)\n","    print(\"Classifiers: \", classifier.__class__.__name__, \"Has a training score of\", round(training_score.mean(), 2) * 100, \"% accuracy score\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dF1PHQd4hNAD","executionInfo":{"status":"ok","timestamp":1674572774654,"user_tz":-60,"elapsed":3665,"user":{"displayName":"Лиза Ганнич","userId":"05440454907585696632"}},"outputId":"7c81c0fc-2bac-4bf2-c902-ffe85d77a6a3"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["Classifiers:  LogisticRegression Has a training score of 98.0 % accuracy score\n","Classifiers:  KNeighborsClassifier Has a training score of 97.0 % accuracy score\n","Classifiers:  SVC Has a training score of 98.0 % accuracy score\n","Classifiers:  DecisionTreeClassifier Has a training score of 97.0 % accuracy score\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"LDzw0e8SUKmL"},"execution_count":null,"outputs":[]}]}